@import './normalize'; // Figure out how to use @use as @import will eventually be deprecated

// TODO: This may all need to be moved to a single SCSS file to get use working. Need to figure out how to do that with a React project.

$phoneWidth: 480px;
$tabletWidth: 768px;
$laptopWidth: 1024px;
$desktopWidth: 1200px;

// Media Query Mixins
@mixin phoneDevice {
    @media(max-width: $phoneWidth) {
        @content;
    }
}

@mixin tabletDevice {
    @media(min-width: $phoneWidth + 1) and (max-width: $tabletWidth) {
        @content;
    }
}

@mixin laptopDevice {
    @media(min-width: $tabletWidth + 1) and (max-width: $laptopWidth) {
        @content;
    }
}

@mixin desktopDevice {
    @media (min-width: $laptopWidth + 1) and (max-width: $desktopWidth) {
        @content;
    }
}

@mixin tvDevice {
    @media (min-width: $desktopWidth + 1) {
        @content;
    }
}

// General styles
* {
    box-sizing: border-box;
}

body {
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
        sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

code {
    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
        monospace;
}

ul.no-bullets {
    margin: 0;
    padding: 0;
    list-style: none;
}

// All input fields are inside labels
label {
    display: block;

    input[type=text] {
        display: block;
        width: 100%;
        height: 30px;
        padding: 0 10px;
    }

    input[type=checkbox], input[type=radio] {
        display: inline-block;
        vertical-align: middle;
    }
}

// Folder and Shelf Tiling
.shelf {
    &-tile {
        &-wrapper {
            display: inline-block;
            margin: 18px 20px;
        }

        &-icon {
            cursor: pointer;
            border: 1px solid;
            box-shadow: 5px 4px 10px 1px #333;
        }

        &-name {
            // Long names will get truncated with overflow, text-overflow, and white-space
            overflow: hidden;
            font-size: 0.9em;
            text-align: center;
            text-overflow: ellipsis; // This will give it the ... when overflown
            white-space: nowrap;
        }
    }
}

// NOTE: https://www.freecodecamp.org/news/css-media-queries-breakpoints-media-types-standard-resolutions-and-more/

// Size the tiles based on size of the device
@mixin sizing-tiles(
    $padding, 
    $width-constraint: 100%, 
    $height-constraint: 100%, 
    $font-size: 3em
) {
    .shelf {
        &-tile {
            &-wrapper {
                max-width: $width-constraint;
            }

            &-icon {
                max-width: $width-constraint;
                max-height: $height-constraint;
                padding: $padding;

                svg {
                    font-size: $font-size;
                }
            }
        }
    }
}

// Phones
@include phoneDevice {
    @include sizing-tiles(9px 10px, 76px, 68px, 1.0em);
}

// Tablets
@include tabletDevice {
    @include sizing-tiles(18px 20px, 96px, 86px, 1.5em);
}

// Laptops
@include laptopDevice {
    @include sizing-tiles(27px 30px, 116px, 104px, 2.0em);
}

// Desktops
@include desktopDevice {
    @include sizing-tiles(36px 40px, 136px, 122px, 2.5em);
}

// TVs
@include tvDevice {
    @include sizing-tiles(45px 50px, 156px, 140px, 3.0em);
}